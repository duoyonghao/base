<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SYS_PERSON">

	<resultMap id="BaseResultMap" type="com.kqds.entity.sys.YZPerson">
		<id column="SEQ_ID" jdbcType="VARCHAR" property="seqId" />
		<result column="USER_ID" jdbcType="VARCHAR" property="userId" />
		<result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
		<result column="PASSWORD" jdbcType="VARCHAR" property="password" />
		<result column="USER_PRIV" jdbcType="VARCHAR" property="userPriv" />
		<result column="DEPT_ID" jdbcType="VARCHAR" property="deptId" />
		<result column="USER_NO" jdbcType="INTEGER" property="userNo" />
		<result column="NOT_LOGIN" jdbcType="VARCHAR" property="notLogin" />
		<result column="IS_LEAVE" jdbcType="INTEGER" property="isLeave" />
		<result column="createtime" jdbcType="VARCHAR" property="createtime" />
		<result column="createuser" jdbcType="VARCHAR" property="createuser" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="LAST_VISIT_TIME" jdbcType="TIMESTAMP" property="lastVisitTime" />
		<result column="MY_STATUS" jdbcType="VARCHAR" property="myStatus" />
		<result column="recordaccount" jdbcType="VARCHAR" property="recordaccount" />
		<result column="RECORDPWD" jdbcType="VARCHAR" property="recordpwd" />
		<result column="organization" jdbcType="VARCHAR" property="organization" />
		<result column="xy_dept" jdbcType="VARCHAR" property="xy_dept" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kqds.entity.sys.YZPerson">
		<result column="DEPT_ID_OTHER" jdbcType="CLOB" property="deptIdOther" />
		<result column="USER_PRIV_OTHER" jdbcType="CLOB" property="userPrivOther" />
	</resultMap>
	<sql id="Base_Column_List">
		SEQ_ID, USER_ID, USER_NAME, PASSWORD, USER_PRIV, DEPT_ID, USER_NO, NOT_LOGIN, IS_LEAVE,
		createtime, createuser, sex, LAST_VISIT_TIME, MY_STATUS, recordaccount,
		RECORDPWD, organization,xy_dept
	</sql>
	<sql id="Blob_Column_List">
		DEPT_ID_OTHER, USER_PRIV_OTHER
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from sys_person
		where SEQ_ID = #{seqId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_person
		where SEQ_ID = #{seqId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.kqds.entity.sys.YZPerson">
		insert into sys_person (SEQ_ID, USER_ID, USER_NAME,
		PASSWORD, USER_PRIV, DEPT_ID,
		USER_NO, NOT_LOGIN, IS_LEAVE,
		createtime, createuser, sex,
		LAST_VISIT_TIME, MY_STATUS, recordaccount,
		RECORDPWD, DEPT_ID_OTHER, USER_PRIV_OTHER
		)
		values (#{seqId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{userPriv,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR},
		#{userNo,jdbcType=INTEGER}, #{notLogin,jdbcType=VARCHAR}, #{isLeave,jdbcType=INTEGER},
		#{createtime,jdbcType=VARCHAR}, #{createuser,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR},
		#{lastVisitTime,jdbcType=TIMESTAMP}, #{myStatus,jdbcType=VARCHAR},
		#{recordaccount,jdbcType=VARCHAR},
		#{recordpwd,jdbcType=VARCHAR}, #{deptIdOther,jdbcType=CLOB}, #{userPrivOther,jdbcType=CLOB}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.kqds.entity.sys.YZPerson">
		insert into sys_person
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="seqId != null">
				SEQ_ID,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="userName != null">
				USER_NAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="userPriv != null">
				USER_PRIV,
			</if>
			<if test="deptId != null">
				DEPT_ID,
			</if>
			<if test="userNo != null">
				USER_NO,
			</if>
			<if test="notLogin != null">
				NOT_LOGIN,
			</if>
			<if test="isLeave != null">
				IS_LEAVE,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="createuser != null">
				createuser,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="lastVisitTime != null">
				LAST_VISIT_TIME,
			</if>
			<if test="myStatus != null">
				MY_STATUS,
			</if>
			<if test="recordaccount != null">
				recordaccount,
			</if>
			<if test="recordpwd != null">
				RECORDPWD,
			</if>
			<if test="deptIdOther != null">
				DEPT_ID_OTHER,
			</if>
			<if test="userPrivOther != null">
				USER_PRIV_OTHER,
			</if>
			<if test="organization != null">
				organization,
			</if>
			<if test="xy_dept != null">
				xy_dept,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="seqId != null">
				#{seqId,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userPriv != null">
				#{userPriv,jdbcType=VARCHAR},
			</if>
			<if test="deptId != null">
				#{deptId,jdbcType=VARCHAR},
			</if>
			<if test="userNo != null">
				#{userNo,jdbcType=INTEGER},
			</if>
			<if test="notLogin != null">
				#{notLogin,jdbcType=VARCHAR},
			</if>
			<if test="isLeave != null">
				#{isLeave,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=VARCHAR},
			</if>
			<if test="createuser != null">
				#{createuser,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=CHAR},
			</if>
			<if test="lastVisitTime != null">
				#{lastVisitTime,jdbcType=TIMESTAMP},
			</if>
			<if test="myStatus != null">
				#{myStatus,jdbcType=VARCHAR},
			</if>
			<if test="recordaccount != null">
				#{recordaccount,jdbcType=VARCHAR},
			</if>
			<if test="recordpwd != null">
				#{recordpwd,jdbcType=VARCHAR},
			</if>
			<if test="deptIdOther != null">
				#{deptIdOther,jdbcType=CLOB},
			</if>
			<if test="userPrivOther != null">
				#{userPrivOther,jdbcType=CLOB},
			</if>
			<if test="organization != null">
				#{organization,jdbcType=VARCHAR},
			</if>
			<if test="xy_dept != null">
				#{xy_dept,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.kqds.entity.sys.YZPerson">
		update sys_person
		<set>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				USER_NAME = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userPriv != null">
				USER_PRIV = #{userPriv,jdbcType=VARCHAR},
			</if>
			<if test="deptId != null">
				DEPT_ID = #{deptId,jdbcType=VARCHAR},
			</if>
			<if test="userNo != null">
				USER_NO = #{userNo,jdbcType=INTEGER},
			</if>
			<if test="notLogin != null">
				NOT_LOGIN = #{notLogin,jdbcType=VARCHAR},
			</if>
			<if test="isLeave != null">
				IS_LEAVE = #{isLeave,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=VARCHAR},
			</if>
			<if test="createuser != null">
				createuser = #{createuser,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=CHAR},
			</if>
			<if test="lastVisitTime != null">
				LAST_VISIT_TIME = #{lastVisitTime,jdbcType=TIMESTAMP},
			</if>
			<if test="myStatus != null">
				MY_STATUS = #{myStatus,jdbcType=VARCHAR},
			</if>
			<if test="recordaccount != null">
				recordaccount = #{recordaccount,jdbcType=VARCHAR},
			</if>
			<if test="recordpwd != null">
				RECORDPWD = #{recordpwd,jdbcType=VARCHAR},
			</if>
			<if test="deptIdOther != null">
				DEPT_ID_OTHER = #{deptIdOther,jdbcType=CLOB},
			</if>
			<if test="userPrivOther != null">
				USER_PRIV_OTHER = #{userPrivOther,jdbcType=CLOB},
			</if>
			<if test="xy_dept != null">
				xy_dept = #{xy_dept,jdbcType=VARCHAR},
			</if>
		</set>
		where SEQ_ID = #{seqId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kqds.entity.sys.YZPerson">
		update sys_person
		set USER_ID = #{userId,jdbcType=VARCHAR},
		USER_NAME = #{userName,jdbcType=VARCHAR},
		PASSWORD =
		#{password,jdbcType=VARCHAR},
		USER_PRIV = #{userPriv,jdbcType=VARCHAR},
		DEPT_ID = #{deptId,jdbcType=VARCHAR},
		USER_NO = #{userNo,jdbcType=INTEGER},
		NOT_LOGIN =
		#{notLogin,jdbcType=VARCHAR},
		IS_LEAVE = #{isLeave,jdbcType=INTEGER},
		createtime = #{createtime,jdbcType=VARCHAR},
		createuser = #{createuser,jdbcType=VARCHAR},
		sex =
		#{sex,jdbcType=CHAR},
		LAST_VISIT_TIME = #{lastVisitTime,jdbcType=TIMESTAMP},
		MY_STATUS = #{myStatus,jdbcType=VARCHAR},
		recordaccount = #{recordaccount,jdbcType=VARCHAR},
		RECORDPWD =
		#{recordpwd,jdbcType=VARCHAR},
		DEPT_ID_OTHER = #{deptIdOther,jdbcType=CLOB},
		USER_PRIV_OTHER = #{userPrivOther,jdbcType=CLOB}
		where SEQ_ID = #{seqId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.kqds.entity.sys.YZPerson">
		update sys_person
		set USER_ID = #{userId,jdbcType=VARCHAR},
		USER_NAME = #{userName,jdbcType=VARCHAR},
		PASSWORD =
		#{password,jdbcType=VARCHAR},
		USER_PRIV = #{userPriv,jdbcType=VARCHAR},
		DEPT_ID = #{deptId,jdbcType=VARCHAR},
		USER_NO = #{userNo,jdbcType=INTEGER},
		NOT_LOGIN =
		#{notLogin,jdbcType=VARCHAR},
		IS_LEAVE = #{isLeave,jdbcType=INTEGER},
		createtime = #{createtime,jdbcType=VARCHAR},
		createuser = #{createuser,jdbcType=VARCHAR},
		sex =
		#{sex,jdbcType=CHAR},
		LAST_VISIT_TIME = #{lastVisitTime,jdbcType=TIMESTAMP},
		MY_STATUS = #{myStatus,jdbcType=VARCHAR},
		recordaccount = #{recordaccount,jdbcType=VARCHAR},
		RECORDPWD =
		#{recordpwd,jdbcType=VARCHAR}
		where SEQ_ID = #{seqId,jdbcType=VARCHAR}
	</update>

	<!--#################################### auto create ################################# -->

	<!--表名 -->
	<sql id="tableName">
		sys_person
	</sql>

	<select id="selectCountByMap" parameterType="map" resultType="int"> <!-- 这个不是mybatis 工具生成的 -->
		select
		count(1)
		from
		<include refid="tableName"></include>
		where 1=1
		<foreach collection="params" index="key" item="val" open="" close="" separator=" ">  <!-- separator为空格 -->
			and ${key} = #{val}
		</foreach>
	</select>

	<select id="selectBeanListByMap" parameterType="map" resultType="YZPerson">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from
		<include refid="tableName"></include>
		where 1=1
		<foreach collection="params" index="key" item="val" open="" close="" separator=" ">  <!-- separator为空格 -->
			and ${key} = #{val}
		</foreach>
	</select>

	<!-- 获取当前部门用户最大排序号 -->
	<select id="getMaxOrderno" parameterType="java.lang.String" resultType="java.lang.String">
		select top 1 user_no from
		<include refid="tableName"></include>
		p
		where dept_id = #{_parameter}
		order by user_no desc
	</select>

	<!-- 通过用户名和门诊编号，查询Person -->
	<select id="getPersonByUserNameAndOrg" parameterType="json" resultType="YZPerson">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER,p.organization
		from
		<include refid="tableName"></include>
		p
		LEFT JOIN SYS_DEPT d on p.DEPT_ID = d.SEQ_ID
		where 1=1
		and
		p.USER_NAME = #{USER_NAME}
		and d.DEPT_CODE = #{DEPT_CODE}
	</select>

	<!-- 根据部门类型获取用户seqIds -->
	<select id="getPerIdsByDeptTypeNoOrg" parameterType="java.lang.String" resultType="java.lang.String">
		select p.seq_id from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		<if test="_parameter != null and _parameter != ''">
			and d.DEPT_TYPE like '%'+#{_parameter}+'%'
		</if>
	</select>

	<!-- 根据部门类型、可见人员获取用户seqIds -->
	<select id="getPerIdsByDeptTypeAndVisualNoOrg" parameterType="json" resultType="java.lang.String">
		select p.seq_id from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		<if test="deptType != null and deptType != ''">
			and d.DEPT_TYPE like '%'+#{deptType}+'%'
		</if>
		and p.seq_id in
		<foreach item="item" index="index" collection="visualstaffList" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 根据部门ID获取人员列表【用于挂号页面的就诊科室人员选择】【离职的不展示】 -->
	<select id="getPersonListByDeptIds" parameterType="json" resultType="YZPerson">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from
		<include refid="tableName"></include>
		p
		where 1=1
		<if test="showleave != 1">
			and is_leave != 1
		</if>
		<if test="organization != null and organization != ''">
			and organization like '%'+ #{organization}+'%'
		</if>
		and (dept_id in 
		<foreach item="item" index="index" collection="idlist" open="(" separator="," close=")">
			#{item}
		</foreach>
		or seq_id in 
		<foreach item="item" index="index" collection="idlist" open="(" separator="," close=")">
			#{item}
		</foreach>
		or xy_dept in 
		<foreach item="item" index="index" collection="idlist" open="(" separator="," close=")">
			#{item}
		</foreach>
		) order by user_name asc
	</select>

	<!-- 根据部门SEQ_ID获取人员SEQ_ID -->
	<select id="getPersonIdListByDeptIds" resultType="json">
		select
		seq_id,user_id
		from
		<include refid="tableName"></include>
		p
		where 1=1
		and dept_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by user_no asc
	</select>

	<!-- 清空密码 -->
	<update id="clearPassword" parameterType="json">
		update
		<include refid="tableName"></include>
		set
		password = #{password}
		where
		seq_id in
		<foreach item="item" index="index" collection="listId" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>

	<!-- 根据Id删除用户 -->
	<delete id="deleteBySeqIds">
		delete from
		<include refid="tableName"></include>
		where seq_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 取得当前部门的所有用户(不对禁止登录的用户进行控制) -->
	<select id="getUserListByDeptSeqId" parameterType="json" resultType="YZPerson">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from
		<include refid="tableName"></include>
		p
		where 1=1
		and (dept_id = #{deptId} or ${findInSetDeptIdOther})
		order by p.user_no asc
	</select>

	<select id="countByUserDocument" parameterType="map" resultType="int">
		select count(1) from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d1 on p.dept_id = d1.seq_id
		left join
		SYS_DEPT d2 on d1.dept_parent = d2.seq_id
		where 1=1
		<if test="deptparentid != null and deptparentid != ''">
			and d2.seq_id = #{deptparentid}
		</if>
		<if test="deptid != null and deptid != ''">
			and d1.seq_id = #{deptid}
		</if>
		<if test="perid != null and perid != ''">
			and p.seq_id = #{perid}
		</if>
		<if test="visualstaff != null and visualstaff != ''">
			and p.seq_id in ( ${visualstaff} )
		</if>
	</select>

	<select id="countByDeptId" parameterType="json" resultType="int">
		select count(1) from
		<include refid="tableName"></include>
		p
		where 1=1
		and dept_id in
		<foreach item="item" index="index" collection="deptIdList" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="username != null and username != ''">
			and (user_id like '%'+#{username}+'%' or
			user_name like '%'+#{username}+'%' )
		</if>
	</select>

	<select id="countByUserId" parameterType="java.lang.String" resultType="int">
		select count(1) from
		<include refid="tableName"></include>
		p
		where 1=1
		and user_id = #{_parameter}
	</select>

	<select id="countByUserNameCurrHos" parameterType="json" resultType="int">
		select count(1) from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and user_name = #{userName}
		<if test="personSeqId != null and personSeqId != ''">
			and p.seq_id != #{personSeqId}
		</if>
		and d.seq_id in (
		select seq_id from SYS_DEPT
		where dept_code = (
		select dept_code
		from SYS_DEPT
		where seq_id = #{deptid}
		)
		)
	</select>


	<select id="selectNoPage" parameterType="json" resultType="json">
		select
		p.seq_id,
		p.user_id,
		p.user_name,
		p.is_leave,
		d.dept_name as
		deptidname,
		up.priv_name as userprivname
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		left join SYS_PRIV
		up on p.user_priv = up.seq_id
		where 1=1
		<if test="showleave != null and showleave != '1'">
			and p.is_leave != 1
		</if>
		<choose>
			<when test="seqId != null and seqId != ''">
				and p.seq_id = #{seqId}
			</when>
			<otherwise>
				<choose>
					<when test="deptId != null and deptId != ''">
						and p.dept_id = #{deptId} or p.xy_dept=#{deptId}
					</when>
					<otherwise>
						and 1 != 1
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		order by user_no asc
	</select>


	<select id="getPersonListByDeptTypeAndVisual" parameterType="json" resultType="json">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and
		d.dept_code = #{organization}
		and d.dept_type like '%'+#{depttype}+'%'
		and p.seq_id in
		<foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
			#{item}
		</foreach>

	</select>

	<select id="getPersonListByDeptType" parameterType="json" resultType="json">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER, d.DEPT_NAME
		from
		<include refid="tableName"></include>
		p
		LEFT JOIN SYS_DEPT d on p.dept_id = d.seq_id OR p.xy_dept = d.seq_id
		where 1=1
		and
		d.DEPT_CODE = #{organization}
		and d.DEPT_TYPE like '%'+#{depttype}+'%'
		and p.IS_LEAVE = 0
	</select>
	
	<select id="getPersonListByDeptType1" parameterType="json" resultType="json">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER, d.DEPT_NAME
		from
		<include refid="tableName"></include>
		p
		LEFT JOIN SYS_DEPT d on p.xy_dept = d.seq_id
		where 1=1
		and
		d.DEPT_CODE LIKE '%' +#{organization}+'%'
		and d.DEPT_TYPE like '%'+#{depttype}+'%'
		and p.IS_LEAVE = 0
	</select>

	<select id="getPersonsByDeptType" parameterType="json" resultType="json">
		select
		seq_id
		from
		<include refid="tableName"></include>
		p
		LEFT JOIN SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and
		d.dept_code = #{organization}
		and d.dept_type like '%'+#{depttype}+'%'
	</select>


	<select id="getPersonListByRole" parameterType="json" resultType="YZPerson">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and
		p.user_priv = #{roleid}
		and d.dept_code = #{organization}
	</select>

	<select id="getPersonListByRolesNoOrg" resultType="YZPerson">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		from
		<include refid="tableName"></include>
		p
		where 1=1
		and p.user_priv in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getPersonListByRoleAndVisual" parameterType="json" resultType="json">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and
		d.dept_code = #{organization}
		and p.user_priv in
		<foreach item="item" index="index" collection="roleIdList" open="(" separator="," close=")">
			#{item}
		</foreach>
		or p.user_priv_other in
		<foreach item="item" index="index" collection="roleIdList" open="(" separator="," close=")">
			#{item}
		</foreach>
		and p.seq_id in
		<foreach item="item" index="index" collection="visualIdList" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getPersonListBySeqIds" resultType="json">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		from
		<include refid="tableName"></include>
		p
		where 1=1
		and p.SEQ_ID in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getPersonOrgListBySeqIds" resultType="json">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		,dept.dept_code
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT dept on dept.seq_id = p.dept_id
		where 1=1
		and
		p.SEQ_ID in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getPersonListBySeqIds4Online" resultType="json">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		,dept.dept_name,priv.priv_name
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT dept on dept.seq_id = p.dept_id
		left join
		SYS_PRIV priv on priv.seq_id = p.user_priv
		where 1=1
		and p.seq_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>


	<select id="getPersonByUserId" parameterType="java.lang.String" resultType="YZPerson">
		select
		p.SEQ_ID, p.USER_ID, p.USER_NAME, p.PASSWORD, p.USER_PRIV, p.DEPT_ID, p.USER_NO, p.NOT_LOGIN, p.IS_LEAVE,
		p.createtime, p.createuser, p.sex, p.LAST_VISIT_TIME, p.MY_STATUS,
		p.recordaccount,
		p.RECORDPWD,p.DEPT_ID_OTHER, p.USER_PRIV_OTHER
		from
		<include refid="tableName"></include>
		p
		where 1=1
		and
		p.user_id = #{_parameter}
	</select>


	<select id="selectPersonPaiban" parameterType="map" resultType="json">
		select
		seq_id,user_name,user_id
		from
		<include refid="tableName"></include>
		p
		where 1=1
		and is_leave = 0
		<if test="dept_id != null and dept_id != ''">
			and p.dept_id = #{dept_id} or xy_dept=#{dept_id}
		</if>
		<if test="seq_id != null and seq_id != ''">
			and p.seq_id = #{seq_id}
		</if>
		<!-- 按门诊区分人员 -->
		<if test="organzation != null and organzation != ''">
			and p.organization = #{organzation}
		</if>
		order by user_no asc
	</select>

	<select id="filterVisualPersons" parameterType="json" resultType="json">
		select
		p.seq_id,p.user_name,d.dept_name
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and
		(
		d.dept_type like '%'+#{deptType}+'%'
		<foreach item="item" index="index" collection="privList" open="" separator="" close="">
			or p.user_priv_other like '%'+#{item}+'%'
		</foreach>
		)
		and p.seq_id in
		<foreach item="item" index="index" collection="visualList" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getAllShowfeiPerson" parameterType="map" resultType="json">
		select
		p.seq_id,p.user_name,d.dept_name
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and d.dept_code = #{organization}
		and (
		p.user_priv in
		<foreach item="item" index="index" collection="privList" open="(" separator="," close=")">
			#{item}
		</foreach>
		or p.user_priv_other in
		<foreach item="item" index="index" collection="privList" open="(" separator="," close=")">
			#{item}
		</foreach>
		)
	</select>

	<select id="getAllShowZjlPerson" parameterType="map" resultType="json">
		select
		p.seq_id,p.USER_NAME,d.DEPT_NAME
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		where 1=1
		and d.dept_code = #{organization}
		and
		p.user_priv in
		<foreach item="item" index="index" collection="privList" open="(" separator="," close=")">
			#{item}
		</foreach>

	</select>

	<select id="selectPage" parameterType="json" resultType="json">
		select
		p.seq_id,
		p.user_id,
		p.dept_id,
		p.user_no,
		p.user_name,
		p.password,
		p.is_leave,
		p.organization,
		d.dept_name as deptidname,
		e.dept_name as xydeptname,
		up.priv_name as userprivname
		from
		<include refid="tableName"></include>
		p
		left join SYS_DEPT d on p.dept_id = d.seq_id
		left join SYS_DEPT e on p.xy_dept = e.seq_id
		left join SYS_PRIV up on p.user_priv = up.seq_id
		where p.dept_id in
		<foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="username != null and username != ''">
			and (user_id like '%'+#{username}+'%' or user_name like '%'+#{username}+'%' )
		</if>
		<if test="search != null and search != ''">
			and ( p.user_id like '%'+#{search}+'%' or p.user_name like '%'+#{search}+'%' )
		</if>
		order by p.user_no asc
	</select>

	<select id="getListByVisualstaff" resultType="json">
		select
		seq_id,dept_id,user_id
		from
		<include refid="tableName"></include>
		p
		where 1=1
		and p.seq_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<!-- 获取所有人员项集合（用于替换seq_id对应的中文名称） -->
	<select id="selectAllBeanList"  resultType="YZPerson">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="tableName"></include>
	</select>
	<!-- 根据部门获取人员信息 -->
	<select id="findVisualPersonnel" parameterType="map" resultType="json">
		SELECT
			*
		FROM
			sys_person
		WHERE
			DEPT_ID = #{deptId}
	</select>
	<!-- 根据用户Id获取个人信息 -->
	<select id="findPersonalDetails" parameterType="map" resultType="json">
		SELECT
			*
		FROM
			sys_person
		WHERE
			USER_ID = #{userId}
	</select>
	<!-- 根据用户Id获取个人信息 -->
	<select id="findPerson" parameterType="map" resultType="json">
		SELECT
			*
		FROM
			sys_person
		WHERE
			USER_NAME = #{yewu}
	</select>
	<!-- 多部门id查询人员情况 -->
	<select id="findPersonByDeptId" parameterType="java.util.Map" resultType="json">
		SELECT
			SEQ_ID as seqId,USER_NAME as username
		FROM
			sys_person
		WHERE
			DEPT_ID IN (${deptId})
		ORDER BY DEPT_ID ASC
	</select>
	<!-- 根据人员id修改门诊 -->
	<update id="updateOrganization" parameterType="java.util.Map" >
		update sys_person set organization=#{organization} where 1=1 and SEQ_ID=#{seqid}
	</update>
	<!-- 查询部门 -->
	<select id="getDeptSeqIdByUserSeqIdAndOrganization" parameterType="java.util.Map" resultType="json">
		IF NOT EXISTS (
			select d.SEQ_ID from sys_dept d
			left join sys_person p on d.seq_id=p.dept_id
			where d.DEPT_CODE=#{organization} and p.seq_id=#{askperson}
			)
		BEGIN
			select d.SEQ_ID from sys_dept d
			left join sys_person p on d.seq_id=p.xy_dept
			where d.DEPT_CODE=#{organization} and p.seq_id=#{askperson}
		END
			select d.SEQ_ID from sys_dept d
			left join sys_person p on d.seq_id=p.dept_id
			where d.DEPT_CODE=#{organization} and p.seq_id=#{askperson}
	</select>
	<!-- 查询是否离职 -->
	<select id="findPersonIsleaveBySeqId" parameterType="java.lang.String" resultType="String">
		SELECT
			IS_LEAVE as isleave
		FROM
			sys_person
		WHERE seq_id=#{seqId}
	</select>
</mapper>